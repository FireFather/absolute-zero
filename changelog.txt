  2.0.1.0
-----------------------------------------------------------------------
* refactored attack bit field generation code
* enabled console window close button

  2.0.0.3
-----------------------------------------------------------------------
* refactored match testing code
* improved time management with better extension handling
* improved evaluation with pawn defence
* disabled unnecessary interface options during testing

  2.0.0.2
-----------------------------------------------------------------------
* cleaned up EPD parsing code
* fixed test suite move time bug
* fixed game PGN draw result bug
* fixed time management reset bug
* improved time management

  2.0.0.1
-----------------------------------------------------------------------
* refactored visual position code
* improved insufficient material routine robustness
* improved time management
* reduced late move reductions aggressiveness

  2.0.0.0
-----------------------------------------------------------------------
* improved game phase interpolation
* improved hash entry memory usage
* improved late move reductions by not reducing the first move
* implemented single reply entension
* implemented check extension

  1.0.8.3
-----------------------------------------------------------------------
* cleaned up hash table code
* tuned passed pawn evaluation
* improved hash clear speed
* optimized evaluation routine

  1.0.8.2
-----------------------------------------------------------------------
* refactored zobrist code
* fixed minor hash resize interface value bug
* fixed random number generation seed bug
* tuned passed pawn piece square table
* improved check extension by disallowing entering quiescence if in check
* improved time resolution
* optimized test functions by minimizing engine initialization
* removed principal variation hash insertion
* revised engine output to reflect initial search conditions

  1.0.8.1
-----------------------------------------------------------------------
* improved static exchange evaluation
* improved search behaviour in checkmate situations
* increased relative weight of material evaluation
* optimized hash entry by switching to struct
* introduced principal variation search in interior nodes
* reintroduced aspiration windows

  1.0.8.0
-----------------------------------------------------------------------
* changed general move generation scheme from pseudo-legal to legal
* removed perft hashing
* added perft bulk counting
* added move causes check function
* improved general move generation order

  1.0.7.3
-----------------------------------------------------------------------
* fixed game threefold repetition adjudication bug
* fixed minor PGN output bug
* tuned doubled and isolated pawn evaluation
* improved search repetition detection

  1.0.7.2
-----------------------------------------------------------------------
* fixed minor node counting bug in the root of the search
* improved hash resizing scheme
* improved command-line functionality
* improved interface functionality
* replaced saving as image sequence with saving as PGN
* implemented perft hashing

  1.0.7.1
-----------------------------------------------------------------------
* tuned evaluation values to emphasize pawn promotion and king safety
* improved capture evaluation
* improved definition of dangerous pawn advances
* experimented with hanging piece evaluation

  1.0.7.0
-----------------------------------------------------------------------
* implemented uci protocol
* replaced dictionary with array transposition table scheme
* added nodes limit option
* added hash size option

  1.0.6.0
-----------------------------------------------------------------------
* fixed quiescence promotion generation bug
* fixed search complications by disabling exact hash cutoffs
* optimized pawn move generation
* optimized bit pop function
* changed some array accesses to function calls
* improved hash cleaning for long searches
* reverted to conservative node counting scheme
* implemented triangular array principal variation collection

  1.0.5.3
-----------------------------------------------------------------------
* fixed draw value incorrect sign bug
* refactored tournament and search code
* replaced library sort function with insertion sort
* improved killer move ordering by not storing duplicates and hash moves
* increased consideration of dangerous pawn advances

  1.0.5.2
-----------------------------------------------------------------------
* replaced depth with ply for various search functions
* fixed mate value hashing bug completely
* improved evaluation distance calculations
* removed late move reductions at root
* optimized tournament threefold repetition adjudication

  1.0.5.1
-----------------------------------------------------------------------
* fixed mate value hashing bug
* introduced late move reductions at root
* implemented preliminary move ordering at root
* optimized make move function
* attempted to implement parallel search
* adjusted search parameters
* adjusted material values

  1.0.5.0
-----------------------------------------------------------------------
* refactored and cleaned up code
* introduced asynchronous animations
* introduced more aggressive late move reductions
* tournament mode supports specified openings
* improved hash cleaning to avoid disk swapping
* improved FEN input robustness
* optimized in check function
* optimized static exchange evaluation by eliminating move making
* experimented with alternative transposition table scheme

  1.0.4.5
-----------------------------------------------------------------------
* refactored engine output code
* optimized killer move ordering

  1.0.4.4
-----------------------------------------------------------------------
* fixed table initialization redundancy bug
* fixed evaluation missing sign bug
* fixed en passant algebraic notation bug
* improved evaluation with identification of hanging pieces
* improved engine output of checkmate values
* changed node counting scheme

  1.0.4.3
-----------------------------------------------------------------------
* fixed hash cleaning bug
* fixed mate distance pruning bug
* improved draw adjudication
* optimized attack field generation via caching
* optimized quiescence search
* implemented futility pruning
* tuned killer moves
* experimented with late move pruning

  1.0.4.2
-----------------------------------------------------------------------
* fixed serious colour bug
* fixed zobrist key generation bug
* fixed tournament class bugs
* optimized unmake move function
* improved evaluation with pawn terms
* improved application functionality
* introduced specialized bit scan function
* implemented mate distance pruning
* implemented draw by threefold repetition, fifty-moves rule, and insufficient material
* tuned evaluation parameters

  1.0.4.1
-----------------------------------------------------------------------
* refactored search to be more conventional
* fixed checkmate hash bug
* fixed king distance evaluation bug
* optimized hash access
* optimized move ordering
* optimized evaluation
* improved test suite testing
* improved evaluation with king safety, tempo, and knight distance terms
* improved hash cleaning
* tuned evaluation parameters

  1.0.4.0
-----------------------------------------------------------------------
* fixed half-move counter bug
* improved hash cleaning
* implemented algebraic notation
* implemented test suite testing

  1.0.3.5
-----------------------------------------------------------------------
* refactored code
* improved testing output
* optimized move generation
* removed dysfunctional parallel search

  1.0.3.4
-----------------------------------------------------------------------
* refactored code
* fixed castling rights bug
* increased search time precision
* improved bit class functionality
* improved tournament class with Elo and error bar calculations

  1.0.3.3
-----------------------------------------------------------------------
* implemented tournament class for engine testing

  1.0.3.2
-----------------------------------------------------------------------
* improved quiescence functionality, improving strength significantly
* tuned for more aggressive null move pruning

  1.0.3.1
-----------------------------------------------------------------------
* refactored code
* implemented static exchange evaluation
* tuned for more aggressive late move reductions
* removed principal variation search outside of root
* experimented with razoring
* experimented with internal iterative deepening

  1.0.3.0
-----------------------------------------------------------------------
* refactored code
* tuned for more aggressive null move pruning
* optimized hash entry
* improved application robustness
* removed aspiration windows
* experimented with futility pruning

  1.0.2.4
-----------------------------------------------------------------------
* added application icon
* improved evaluation with more pawn knowledge

  1.0.2.3
-----------------------------------------------------------------------
* refactored code
* prepared UCI code
* optimized enpassant hashing
* improved move class functionality
* implemented basic time management

  1.0.2.2
-----------------------------------------------------------------------
* changed engine output format
* removed unnecessary variables
* improved bit class functionality

 1.0.2.1
-----------------------------------------------------------------------
* refactored and cleaned up code
* optimized stopwatch access
* improved evaluation with bishop mobility and more pawn knowledge

  1.0.1.0
-----------------------------------------------------------------------
* replaced mailbox representation with bitboards
* changed move representation from object to integer
* fixed castling rights hashing bug

  1.0.0.2
-----------------------------------------------------------------------
* added bitboards for improved evaluation
* added support for extracting and displaying principal variation
* fixed transposition table memory issues
* implemented aspiration windows
* introduced testing with Bratko-Kopec positions

  1.0.0.1
-----------------------------------------------------------------------
* completed move generation with en passant and underpromotion
* added FEN support
* implemented Zobrist hashing and transposition table
* implemented killer move heuristic
* implemented principal variation search
* experimented with parallel search
* experimented with incremental evaluation

  1.0.0.0
-----------------------------------------------------------------------
* implemented graphical interface
* implemented user interaction
* board represented with mailbox array
* implemented move generation with the exception of en passant and underpromotion
* implemented minimax with alpha-beta pruning
* added piece-square tables for some positional knowledge in evaluation
* implemented quiescence search
* implemented iterative deepening
* implemented null move pruning
* implemented late move reductions